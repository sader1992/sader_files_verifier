<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHBsAAAEACACIBwAAFgAAACgAAAAcAAAANgAAAAEACAAAAAAA9AIAAMMOAADDDgAAAAEAAAAB
        AACsvbYA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALz0/wC24f8ApcfoAJSw0QCDmboAcYGjAGNq
        kQBTU4IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAAICAgACAgMAAwMEAAQE
        BQACAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+3tAODMzgDBp68Ap4uVAIxv
        egB3XmQAWUNHADsnKQDE3v8Aq7v6AJKY9AB6fukAZmLLAFFGsgA+NYwALSVuAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGtQVQAAAAAAwP//AKvm3gCW1sAAfrWbAGaUfgBRdF8AO1RAACU3KQDI+/8AsuP9AJzL
        +wCFs+4Ac5faAGB6xQBXaasATlGRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5fD/AMbK
        7ACiptgAjI7IAHx0uABmXJ4AUUF+ADslXACj5f8Ai8X7AHKl9wBZhfIAR2TtADBDvgAYIo8AAABhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAorPeAI+bwwB/hq8Ab3KZAF9egwBPSW0AQDZUADEj
        OwDr8/8A19/uAMPL3ACvt8oAm6O4AIuPqQB7e5kAa2eJAOXw9wDP4f8Assb/AJ+u9gCEkNwAa3O9AFJW
        ngA7P4IAtfDWAKXYuACUv5wAh6OAAHSGZgBkaEwAVEoxAEMrFgAAAAAAAAAAAAAAAAAAAAAADxI7AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC15f8AnsjzAIaq5gBujNMAWXKzAEZalwAyQXoAGiVVAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/3v8AqMTrAJGq
        1wB6kMMAYnauAEtejgA0Rm4AHC5OANzR8ADHuNYAsJ+9AJmHowCCb4gAalduAFM/UwA7JzgAAAAAAAAA
        AQABAQIAAQIDAAICBAACAwUAAwQGAAQFCADL//8ArN7/AIzA/wBxoesAXIXPAEdpsgA5To0AKTRnAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3v//AMjm5wCyzM8AnLK3AIWYnwBxfYQAXWJpAEhG
        TQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAA
        /wDH2sgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIaGhoaFADc1AAAAAAAA
        AAAAAAAAAAAAADcAh4aEgoKDhDc0NwAARwAAAAAAAAAAAAAAADc3N4WD2NjY2IQ3NTcANzMAAAAAAAAA
        AAAAADc134WEgtjYgoI3NDU3NzQ1ADYAAAAAAAAAADc3Nd+DizeCgoKCNzQ2NzY1NjcAAAAAAAAAAAA3
        NzXfgjcChIKChDc0Nt81NTc0AAAAAAAAAAA2NTc134M3AoSCgjU1NDY2NTU3NDUAAAAANwAANjU3Mt+E
        Nzc3goI1MjQ2NjU1NzQ1AAAAAAA3NjY0NzI3Nzc3hIKENTI0NjI1NzU0NQAAAAAANjQ2MjcyNDeEg9iC
        NzPYNTYyNTU1NDUAAAAAADY0NjA3MjI3hYSChDUy2DY0MDI1NjU1ADcAAAAANDI2MjUyNDeFNDc0MjQ2
        MjIyMjY2NzcAAAAAADQyMjQ2NTI0NjQ3NDI2NDIzNDU2Nzc2AAAAAAA02DQyNDY0MzQ2NDI0NDI0NDU1
        Mjc0NgAAAAAANtgyNDQ0NjU1NDM0NDM0NDQ1NTY2MjYAAAAAADbYMjQ0NDY3NTU0NDQ0NDQ0NTQ2MjA3
        AAAAAAA22DI0NTU1NzU1NDQ0NDQ0NDQ2NDI1NwAAAAAANDIwNDQ1Nzc3NTQ0NDU0NDQ1NjQyNgAAAAAA
        AAA0MjI0Nzc3Nzc3NzU0NDQ1NjQyNDcAAAAAAAAANDIyNDc3Nzc3NTU0NDQ0NTQ0NDYAAAAAAAAAAAA0
        Mjc1Nzc0NjY1NTY0NDU0NDU3AAAAAAAAAAAAADQyNjY3NzM2NjY0NDQ0NDU3AAAAAAAAAAAAAAAANTU3
        Nzc0MzM0NDQ1NTc3AAAAAAAAAAAAAAAAAAAANTc3NjY2NjU1NzcAAAAAAAAAAAAAAAAAAAAAAAAANzc3
        Nzc3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>